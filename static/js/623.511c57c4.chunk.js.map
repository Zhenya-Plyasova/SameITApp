{"version":3,"file":"static/js/623.511c57c4.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","components/TTNStatus.jsx","components/TtnList.jsx","components/History/History.jsx","components/CheckTTN/CheckTTN.jsx","pages/Home.jsx","servises/operations.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport default function SearchBar(props) {\n  const [value, setValue] = useState('');\n  const [, setSearchParams] = useSearchParams();\n  const numericExpression = /^\\d{14}$/;\n  const ukrainianLettersExpression = /^[А-Яа-яІіЇїЄєҐґ\\s]*$/;\n  const [isValid, setIsValid] = useState(true);\n\n  useEffect(() => {\n    setValue(props.initialValue || '');\n  }, [props.initialValue]);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const queryValue = value.trim();\n\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    if (props.pattern === 'numeric' && numericExpression.test(queryValue)) {\n      setSearchParams({ query: queryValue });\n      setIsValid(true);\n    } else if (\n      props.pattern === 'ukrainian' &&\n      ukrainianLettersExpression.test(queryValue)\n    ) {\n      setSearchParams({ query: queryValue });\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const handleChange = ({ target }) => {\n    const inputValue = target.value;\n    const onlyNumbers = /^[0-9]*$/;\n\n    if (props.pattern === 'numeric' && !onlyNumbers.test(inputValue)) {\n        return;\n    }\n    else if (props.pattern === 'ukrainian' && !ukrainianLettersExpression.test(inputValue)) {\n      return;\n    }\n      setValue(target.value);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      onSubmit={updateQueryString}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label={props.label}\n        variant=\"outlined\"\n        size=\"small\"\n        inputMode={props.pattern === 'numeric' ? 'numeric' : 'text'}\n        required\n        onChange={handleChange}\n        value={value}\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        {props.buttonText}\n      </Button>\n      {!isValid && (\n        <p style={{ color: 'red' }}>\n          Некоректне значення. Будь ласка, перевірте введені дані.\n        </p>\n      )}\n    </Box>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\nimport CircularIndeterminate from './СircularIndeterminate';\n\nexport const TtnStatus = ({data, isLoading}) => {\n    const [negativeStatus, setNegativeStatus] = useState(false);\n    const [recipientHeader, setRecipientHeader] = useState(false);\n    useEffect(() => {\n      if ([1, 2, 3, 112].includes(parseInt(data.StatusCode))) {\n        setNegativeStatus(true);\n      } else {\n        setNegativeStatus(false);\n      }\n          if ([4, 41, 5, 6, 101].includes(parseInt(data.StatusCode))) {\n            setRecipientHeader('Прямує до');\n          } else if ([7, 8].includes(parseInt(data.StatusCode))) {\n            setRecipientHeader('Прибуло');\n          } else if (\n            [9, 10, 11, 106].includes(parseInt(data.StatusCode))\n          ) {\n            setRecipientHeader('Отримано');\n          } else {\n            setRecipientHeader('Адреса доставки');\n          }\n        }, [data.StatusCode]);\n\n  const InformBlock = (props) => {\n    return (\n      <div\n        style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}\n        >\n                <Typography variant=\"body1\" color=\"grey\" sx={{ ml: 1 }}>\n                    <span style={{ color: '#1976d2', fontWeight: 'bold' }}>\n                        {props.header}:{' '}\n                    </span>\n                    {props.value}\n                </Typography>\n      </div>\n    );\n  };\n  return (\n    <Box\n      sx={{\n        m: 1,\n        p: 1,\n        maxWidth: 420,\n        height: 250,\n        marginBottom: '8px',\n        backgroundColor: 'azure',\n        border: '1px dashed lightgrey',\n        borderRadius: 2,\n        '&:hover': {\n          backgroundColor: 'lightcyan',\n          opacity: [0.9, 0.8, 0.7],\n        },\n      }}\n    >\n      {isLoading && <CircularIndeterminate />}\n      {!data.Status && !isLoading && (\n        <InformBlock header={'тут буде інформація про статус доставки'} />\n      )}\n      {data.Status && !isLoading && (\n        <>\n          <InformBlock header={'Статус'} value={data.Status} />\n          {!negativeStatus && (\n            <>\n              <InformBlock\n                header={'Відправлено'}\n                value={data.WarehouseSender}\n              />\n              <InformBlock\n                header={recipientHeader}\n                value={data.WarehouseRecipient}\n              />\n            </>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nimport ListItemText from '@mui/material/ListItemText';\n\nexport const TtnList = ({ ttnList, onButtonClick }) => {\n\n return (\n   <Box sx={{justifyContent: 'center'}}>\n     <nav aria-label=\"secondary mailbox folders\">\n       <List>\n         {ttnList.map(ttnItem => (\n           <ListItem disablePadding key={ttnItem}>\n             <ListItemButton onClick={()=>onButtonClick(ttnItem)}>\n               <ListItemText primary={ttnItem} />\n             </ListItemButton>\n           </ListItem>\n         ))}\n       </List>\n     </nav>\n   </Box>\n );\n};\n","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { TtnList } from 'components/TtnList';\nimport * as React from 'react';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\nexport default function HistoryBlock({ ttnList, onClick, onButtonClick }) {\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = anchor => (\n    <Box\n      sx={{\n        m: 3,\n        border: '1px dashed grey',\n        borderRadius: 2,\n        overflow: 'auto',\n        maxWidth: 435,\n        width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250,\n      }}\n      elevation={3}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      {ttnList.length > 0 && (\n        <>\n          <TtnList ttnList={ttnList} onButtonClick={onButtonClick} />\n          <Button sx={{ m: 1 }} onClick={onClick}>\n            Очистити\n          </Button>\n        </>\n      )}\n    </Box>\n  );\n\n  return (\n    <div>\n      {ttnList.length > 0 && (\n        <React.Fragment key={'right'}>\n          <Button onClick={toggleDrawer('right', true)}>{'Історія'}</Button>\n          <SwipeableDrawer\n            anchor={'right'}\n            open={state['right']}\n            onClose={toggleDrawer('right', false)}\n            onOpen={toggleDrawer('right', true)}\n          >\n            {list('right')}\n          </SwipeableDrawer>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { getTrackingStatus } from 'servises/operations';\nimport { useSearchParams } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport { TtnStatus } from 'components/TTNStatus';\nimport HistoryBlock from 'components/History/History';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nexport default function CheckTTN() {\n  const [declarationStatus, setDeclarationStatus] = useState({});\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState('');\n  const [initialValue, setInitialValue] = useState('');\n  const [ttnList, setTtnList] = useState(() => {\n    return JSON.parse(localStorage.getItem('ttnList')) ?? [];\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const TtnQuery = searchParams.get('query') ?? '';\n  const onButtonClick = ttnItem => {\n    setSearchParams({ query: ttnItem });\n    setInitialValue(ttnItem);\n  };\n\n  useEffect(() => {\n    const fetchTrackingData = async TtnQuery => {\n      try {\n        setIsLoading(true);\n        if (!ttnList.includes(TtnQuery)) {\n          setTtnList(prevTtnList => [...prevTtnList, TtnQuery]);\n        }\n        const response = await getTrackingStatus(TtnQuery);\n        setDeclarationStatus(response.data.data[0]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    TtnQuery && fetchTrackingData(TtnQuery);\n    // eslint-disable-next-line\n  }, [TtnQuery]);\n\n  useEffect(() => {\n    ttnList.length !== 0 &&\n      localStorage.setItem('ttnList', JSON.stringify(ttnList));\n  }, [ttnList]);\n\n  const removeTtnList = () => {\n    localStorage.removeItem('ttnList');\n    setTtnList([]);\n  };\n\n  return (\n    <div>\n      <Box>\n        <SearchBar\n          label=\"Введіть номер ТТН\"\n          buttonText=\"Отримати статус\"\n          pattern=\"numeric\"\n          initialValue={initialValue}\n        />\n      </Box>\n      {error && <p>Something went wrong...</p>}\n      <TtnStatus data={declarationStatus} isLoading={isLoading} />\n      <HistoryBlock\n        ttnList={ttnList}\n        onClick={removeTtnList}\n        onButtonClick={onButtonClick}\n      />\n    </div>\n  );\n}\n","import CheckTTN from 'components/CheckTTN/CheckTTN';\n\nconst Home = () => {\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: \"center\"}}>\n      <CheckTTN />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.novaposhta.ua/v2.0/json/';\nconst apiKey = 'bc0aa8469883b07a40cd36b8052a0ae2';\n\nexport function getTrackingStatus(number) {\n   const data = axios.post('/', {\n    apiKey,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: number,\n        },\n      ],\n    },\n   });\n    return data\n}\n\nexport function getWarehouses(city, page) {\n   const data = axios.post('/', {\n     apiKey,\n     modelName: 'Address',\n     calledMethod: 'getWarehouses',\n     methodProperties: {\n       CityName: city,\n       Page: page,\n       Limit: '50',\n       Language: 'UA',\n     },\n   }); \n    return data;\n}\n"],"names":["SearchBar","props","useState","value","setValue","useSearchParams","setSearchParams","numericExpression","ukrainianLettersExpression","isValid","setIsValid","useEffect","initialValue","component","sx","m","width","noValidate","onSubmit","e","preventDefault","queryValue","trim","pattern","test","query","id","label","variant","size","inputMode","required","onChange","target","inputValue","type","buttonText","style","color","TtnStatus","data","isLoading","negativeStatus","setNegativeStatus","recipientHeader","setRecipientHeader","includes","parseInt","StatusCode","InformBlock","display","alignItems","marginBottom","Typography","ml","fontWeight","header","Box","p","maxWidth","height","backgroundColor","border","borderRadius","opacity","Status","WarehouseSender","WarehouseRecipient","TtnList","ttnList","onButtonClick","justifyContent","List","map","ttnItem","ListItem","disablePadding","ListItemButton","onClick","ListItemText","primary","HistoryBlock","anchor","React","top","left","bottom","right","state","setState","toggleDrawer","open","event","key","length","Button","SwipeableDrawer","onClose","onOpen","overflow","elevation","role","onKeyDown","CheckTTN","declarationStatus","setDeclarationStatus","searchParams","error","setError","setInitialValue","JSON","parse","localStorage","getItem","setTtnList","setIsLoading","TtnQuery","get","fetchTrackingData","prevTtnList","getTrackingStatus","response","message","setItem","stringify","removeItem","flexDirection","axios","apiKey","number","modelName","calledMethod","methodProperties","Documents","DocumentNumber","getWarehouses","city","page","CityName","Page","Limit","Language"],"sourceRoot":""}