{"version":3,"file":"static/js/204.908a5f1f.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","pages/OfficesList.jsx","servises/operations.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport default function SearchBar(props) {\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const numericExpression = /^\\d{14}$/;\n  const ukrainianLettersExpression = /^[А-Яа-яІіЇїЄєҐґ\\s]*$/;\n  const [isValid, setIsValid] = useState(true);\n  console.log(query);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const queryValue = value.trim();\n\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    if (props.pattern === 'numeric' && numericExpression.test(queryValue)) {\n      setSearchParams({ query: queryValue });\n      setIsValid(true);\n    } else if (\n      props.pattern === 'ukrainian' &&\n      ukrainianLettersExpression.test(queryValue)\n    ) {\n      setSearchParams({ query: queryValue });\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n    console.log(query);\n  };\n\n  const handleChange = ({ target }) => {\n    const inputValue = target.value;\n    const onlyNumbers = /^[0-9]*$/;\n    // const onlyUkrainianSymbols = \n    if (props.pattern === 'numeric' && !onlyNumbers.test(inputValue)) {\n        return;\n    }\n    else if (props.pattern === 'ukrainian' && !ukrainianLettersExpression.test(inputValue)) {\n      return;\n    }\n      setValue(target.value);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      onSubmit={updateQueryString}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label={props.label}\n        variant=\"outlined\"\n        size=\"small\"\n        // pattern={props.pattern}\n        inputMode={props.pattern === 'numeric' ? 'numeric' : 'text'}\n        required\n        onChange={handleChange}\n        value={value}\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        {props.buttonText}\n      </Button>\n      {!isValid && (\n        <p style={{ color: 'red' }}>\n          Некоректне значення. Будь ласка, перевірте введені дані.\n        </p>\n      )}\n    </Box>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import Typography from '@mui/material/T ypography';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { getWarehouses } from 'servises/operations';\n\nconst OfficeList = () => {\n\n    const [warehouses, setWarehouses] = useState(null);\n    const [searchParams] = useSearchParams();\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const cityQuery = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n      const fetchWarehousesData = async city => {\n          try {\n              if (city.length !== 0) {\n                setIsLoading(true);\n                const response = await getWarehouses(city);\n                console.log(response.data.data);\n                setWarehouses(response.data.data);\n            }\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchWarehousesData(cityQuery);\n    }, [cityQuery]);\n  return (\n    <>\n      <div>\n        {/* <Typography variant=\"h6\" gutterBottom>\n          Пошук відділення за номером або за населеним пунктом\n        </Typography> */}\n        <SearchBar\n          label=\"Оберіть насел. пункт\"\n          buttonText=\"знайти\"\n          pattern=\"ukrainian\"\n        />\n      </div>\n      {error && <p>Something went wrong...</p>}\n      {isLoading && <p>Loading...</p>}\n          <ul>\n              {warehouses && warehouses.map(warehouse => {\n                  return <li key={warehouse.Number}>{warehouse.ShortAddress}</li>;\n      })}</ul>\n    </>\n  );\n};\n\nexport default OfficeList;\n","import axios from 'axios';\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://api.novaposhta.ua/v2.0/json/';\nconst apiKey = 'bc0aa8469883b07a40cd36b8052a0ae2';\n\nexport function getTrackingStatus(number) {\n   const data = axios.post('/', {\n    apiKey,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: number,\n        },\n      ],\n    },\n   });\n    return data\n}\n\nexport function getWarehouses(city) {\n   const data = axios.post('/', {\n     apiKey,\n     modelName: 'Address',\n     calledMethod: 'getWarehouses',\n     methodProperties: {\n       CityName: city,\n       Page: '1',\n       Limit: '50',\n       Language: 'UA',\n     },\n   }); \n    return data;\n}\n"],"names":["SearchBar","props","useState","value","setValue","useSearchParams","searchParams","setSearchParams","query","get","numericExpression","ukrainianLettersExpression","isValid","setIsValid","console","log","component","sx","m","width","noValidate","onSubmit","e","preventDefault","queryValue","trim","pattern","test","id","label","variant","size","inputMode","required","onChange","target","inputValue","type","buttonText","style","color","warehouses","setWarehouses","error","setError","isLoading","setIsLoading","cityQuery","useEffect","fetchWarehousesData","city","length","getWarehouses","response","data","message","map","warehouse","ShortAddress","Number","axios","apiKey","getTrackingStatus","number","modelName","calledMethod","methodProperties","Documents","DocumentNumber","CityName","Page","Limit","Language"],"sourceRoot":""}