{"version":3,"file":"static/js/433.4ce08c19.chunk.js","mappings":"yLAIe,SAASA,EAAUC,GAC9B,OACE,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,SAEpCC,YAAU,EALZ,WAOE,SAAC,IAAD,CACEC,GAAG,iBACHC,MAAOP,EAAMO,MACbC,QAAQ,WACRC,KAAK,QACLC,QAASV,EAAMU,QACfC,UAAQ,KAEV,SAAC,IAAD,CAAQH,QAAQ,YAAhB,SAA6BR,EAAMY,eAG1C,C,uHCtBYC,EAAY,WACvB,OACE,SAACC,EAAA,EAAD,CACIZ,GAAI,CACJC,EAAE,EACFY,SAAU,IACVC,OAAQ,IACRC,aAAc,MACdC,gBAAiB,QACjBC,OAAQ,uBACRC,aAAc,EACd,UAAW,CACTF,gBAAiB,YACjBG,QAAS,CAAC,GAAK,GAAK,OAK7B,E,kBCpBYC,EAAU,WACnB,OACI,yBACA,wBAAI,iCAGX,ECDc,SAASC,IACtB,OACE,UAACT,EAAA,EAAD,CAEEZ,GAAI,CACFC,EAAG,EACHgB,OAAQ,kBACRC,aAAc,EACdL,SAAU,KANd,WASE,SAACS,EAAA,EAAD,CAAYhB,QAAQ,KAAKiB,MAAM,UAC/BvB,GAAI,CAACwB,GAAG,GADR,SACY,gDAGZ,SAACJ,EAAD,KACA,SAACK,EAAA,EAAD,UAAQ,uDAGb,C,cCnBc,SAASC,IACtB,OACE,iCACE,SAACd,EAAA,EAAD,WACE,SAACf,EAAA,EAAD,CACEQ,MAAM,+FACNK,WAAW,wFACXF,QAAQ,cAIV,SAACG,EAAD,KACA,SAACU,EAAD,MAIP,C,wBClBDM,EAAAA,EAAAA,SAAAA,QAAyB,uCACzB,IAAMC,EAAS,mCAER,SAASC,EAAkBC,GAa9B,OAZYH,EAAAA,EAAAA,KAAW,IAAK,CAC5BC,OAAAA,EACAG,UAAW,mBACXC,aAAc,qBACdC,iBAAkB,CAChBC,UAAW,CACT,CACEC,eAAgBL,MAMzB,CAEM,SAASM,EAAcC,GAY1B,OAXYV,EAAAA,EAAAA,KAAW,IAAK,CAC3BC,OAAAA,EACAG,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CAChBK,SAAUD,EACVE,KAAM,IACNC,MAAO,KACPC,SAAU,OAIhB,CC/BD,IAiCA,EAjCa,WA0BX,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAOb,GAAP,gGAECD,EAAkBC,GAFnB,OAEhBc,EAFgB,OAGtBC,QAAQC,IAAIF,EAASG,KAAKA,KAAK,IAHT,gDAKtBF,QAAQC,IAAR,MALsB,yDAAH,sDAQvBH,EAAkB,iBACnB,GAAE,KAEDD,EAAAA,EAAAA,YAAU,WACR,IAAMM,EAAmB,mCAAG,WAAMX,GAAN,gGAEDD,EAAcC,GAFb,OAElBO,EAFkB,OAGxBC,QAAQC,IAAIF,EAASG,KAAKA,MAHF,gDAKxBF,QAAQC,IAAR,MALwB,yDAAH,sDAQzBE,EAAoB,2BACrB,GAAE,KAGH,+BACE,SAACtB,EAAD,KAGL,C","sources":["components/SearchBar/SearchBar.jsx","components/TTNStatus.jsx","components/TtnList.jsx","components/History/History.jsx","components/CheckTTN/CheckTTN.jsx","redux/operations.js","pages/Home.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport default function SearchBar(props) {\n    return (\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label={props.label}\n          variant=\"outlined\"\n          size=\"small\"\n          pattern={props.pattern}\n          required\n        />\n        <Button variant=\"contained\">{props.buttonText}</Button>\n      </Box>\n    );\n};","import Box from '@mui/material/Box';\n\nexport const TtnStatus = () => {\n  return (\n    <Box\n        sx={{\n        m:1,\n        maxWidth: 435,\n        height: 300,\n        marginBottom: '8px',\n        backgroundColor: 'azure',\n        border: '1px dashed lightgrey',\n        borderRadius: 2,\n        '&:hover': {\n          backgroundColor: 'lightcyan',\n          opacity: [0.9, 0.8, 0.7],\n        },\n      }}\n    />\n  );\n};\n","export const TtnList = () => {\n    return(\n        <ul>\n        <li>there will be a list of TTN</li>\n        </ul >\n    )\n}","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport { TtnList } from 'components/TtnList';\n\nexport default function HistoryBlock() {\n  return (\n    <Box\n      // component=\"span\"\n      sx={{\n        m: 1,\n        border: '1px dashed grey',\n        borderRadius: 2,\n        maxWidth: 435,\n      }}\n    >\n      <Typography variant=\"h6\" color=\"primary\"\n      sx={{ml:1}}>\n        Історія\n      </Typography>\n      <TtnList/>\n      <Button>Очистити</Button>\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport { TtnStatus } from 'components/TTNStatus';\nimport HistoryBlock from 'components/History/History';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nexport default function CheckTTN() {\n  return (\n    <>\n      <Box>\n        <SearchBar\n          label=\"Введіть номер ТТН\"\n          buttonText=\"Отримати статус\"\n          pattern=\"[0-9]*\"\n        />\n      </Box>\n          {/* <div style={{ display: \"flex\" }}> */}\n        <TtnStatus />\n        <HistoryBlock />\n      {/* </div> */}\n    </>\n  );\n}\n","import axios from 'axios';\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://api.novaposhta.ua/v2.0/json/';\nconst apiKey = 'bc0aa8469883b07a40cd36b8052a0ae2';\n\nexport function getTrackingStatus(number) {\n   const data = axios.post('/', {\n    apiKey,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: number,\n        },\n      ],\n    },\n   });\n    return data\n}\n\nexport function getWarehouses(city) {\n   const data = axios.post('/', {\n     apiKey,\n     modelName: 'Address',\n     calledMethod: 'getWarehouses',\n     methodProperties: {\n       CityName: city,\n       Page: '1',\n       Limit: '50',\n       Language: 'UA',\n     },\n   }); \n    return data;\n}\n","import CheckTTN from 'components/CheckTTN/CheckTTN';\nimport { useEffect } from 'react';\nimport { getTrackingStatus, getWarehouses } from 'redux/operations';\n\nconst Home = () => {\n\n  useEffect(() => {\n    const fetchTrackingData = async (number) => {\n      try {\n        const response = await getTrackingStatus(number);\n        console.log(response.data.data[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    } \n    fetchTrackingData(`20400344966669`);\n  }, [])\n\n    useEffect(() => {\n      const fetchWarehousesData = async city => {\n        try {\n          const response = await getWarehouses(city);\n          console.log(response.data.data);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchWarehousesData(`Київ`);\n    }, []);\n\n  return (\n    <>\n      <CheckTTN />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["SearchBar","props","component","sx","m","width","noValidate","id","label","variant","size","pattern","required","buttonText","TtnStatus","Box","maxWidth","height","marginBottom","backgroundColor","border","borderRadius","opacity","TtnList","HistoryBlock","Typography","color","ml","Button","CheckTTN","axios","apiKey","getTrackingStatus","number","modelName","calledMethod","methodProperties","Documents","DocumentNumber","getWarehouses","city","CityName","Page","Limit","Language","useEffect","fetchTrackingData","response","console","log","data","fetchWarehousesData"],"sourceRoot":""}