{"version":3,"file":"static/js/165.b7fd62ba.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","components/TTNStatus.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","components/TtnList.jsx","components/History/History.jsx","components/CheckTTN/CheckTTN.jsx","pages/Home.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport default function SearchBar(props) {\n    return (\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '25ch' },\n        }}\n        noValidate\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label={props.label}\n          variant=\"outlined\"\n          size=\"small\"\n          pattern={props.pattern}\n          required\n        />\n        <Button variant=\"contained\">{props.buttonText}</Button>\n      </Box>\n    );\n};","import Box from '@mui/material/Box';\n\nexport const TtnStatus = () => {\n  return (\n    <Box\n        sx={{\n        m:1,\n        maxWidth: 435,\n        height: 300,\n        marginBottom: '8px',\n        backgroundColor: 'azure',\n        border: '1px dashed lightgrey',\n        borderRadius: 2,\n        '&:hover': {\n          backgroundColor: 'lightcyan',\n          opacity: [0.9, 0.8, 0.7],\n        },\n      }}\n    />\n  );\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","export const TtnList = () => {\n    return(\n        <ul>\n        <li>there will be a list of TTN</li>\n        </ul >\n    )\n}","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport { TtnList } from 'components/TtnList';\n\nexport default function HistoryBlock() {\n  return (\n    <Box\n      // component=\"span\"\n      sx={{\n        m: 1,\n        border: '1px dashed grey',\n        borderRadius: 2,\n        maxWidth: 435,\n      }}\n    >\n      <Typography variant=\"h6\" color=\"primary\"\n      sx={{ml:1}}>\n        Історія\n      </Typography>\n      <TtnList/>\n      <Button>Очистити</Button>\n    </Box>\n  );\n}\n","import Box from '@mui/material/Box';\nimport { TtnStatus } from 'components/TTNStatus';\nimport HistoryBlock from 'components/History/History';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nexport default function CheckTTN() {\n  return (\n    <>\n      <Box>\n        <SearchBar\n          label=\"Введіть номер ТТН\"\n          buttonText=\"Отримати статус\"\n          pattern=\"[0-9]*\"\n        />\n      </Box>\n          {/* <div style={{ display: \"flex\" }}> */}\n        <TtnStatus />\n        <HistoryBlock />\n      {/* </div> */}\n    </>\n  );\n}\n","// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\nimport CheckTTN from 'components/CheckTTN/CheckTTN';\n\nconst Home = () => {\n  return (\n    <>\n      <CheckTTN />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["SearchBar","props","component","sx","m","width","noValidate","id","label","variant","size","pattern","required","buttonText","TtnStatus","Box","maxWidth","height","marginBottom","backgroundColor","border","borderRadius","opacity","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","TtnList","HistoryBlock","ml","Button","CheckTTN"],"sourceRoot":""}