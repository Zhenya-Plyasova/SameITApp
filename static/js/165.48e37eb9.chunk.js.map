{"version":3,"file":"static/js/165.48e37eb9.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","components/TTNStatus.jsx","components/TtnList.jsx","components/History/History.jsx","components/CheckTTN/CheckTTN.jsx","pages/Home.jsx","servises/operations.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport default function SearchBar(props) {\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const numericExpression = /^\\d{14}$/;\n  const ukrainianLettersExpression = /^[А-Яа-яІіЇїЄєҐґ\\s]*$/;\n  const [isValid, setIsValid] = useState(true);\n  console.log(query);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const queryValue = value.trim();\n\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    if (props.pattern === 'numeric' && numericExpression.test(queryValue)) {\n      setSearchParams({ query: queryValue });\n      setIsValid(true);\n    } else if (\n      props.pattern === 'ukrainian' &&\n      ukrainianLettersExpression.test(queryValue)\n    ) {\n      setSearchParams({ query: queryValue });\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n    console.log(query);\n  };\n\n  const handleChange = ({ target }) => {\n    const inputValue = target.value;\n    const onlyNumbers = /^[0-9]*$/;\n\n    if (props.pattern === 'numeric' && !onlyNumbers.test(inputValue)) {\n        return;\n    }\n    else if (props.pattern === 'ukrainian' && !ukrainianLettersExpression.test(inputValue)) {\n      return;\n    }\n      setValue(target.value);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      onSubmit={updateQueryString}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label={props.label}\n        variant=\"outlined\"\n        size=\"small\"\n        // pattern={props.pattern}\n        inputMode={props.pattern === 'numeric' ? 'numeric' : 'text'}\n        required\n        onChange={handleChange}\n        value={value}\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        {props.buttonText}\n      </Button>\n      {!isValid && (\n        <p style={{ color: 'red' }}>\n          Некоректне значення. Будь ласка, перевірте введені дані.\n        </p>\n      )}\n    </Box>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\n\nexport const TtnStatus = props => {\n    const [negativeStatus, setNegativeStatus] = useState(false);\n    const [recipientHeader, setRecipientHeader] = useState(false);\n    useEffect(() => {\n      if ([1, 2, 3, 112].includes(parseInt(props.data.StatusCode))) {\n        setNegativeStatus(true);\n      } else {\n        setNegativeStatus(false);\n      }\n          if ([4, 41, 5, 6, 101].includes(parseInt(props.data.StatusCode))) {\n            setRecipientHeader('Прямує до');\n          } else if ([7, 8].includes(parseInt(props.data.StatusCode))) {\n            setRecipientHeader('Прибуло');\n          } else if (\n            [9, 10, 11, 106].includes(parseInt(props.data.StatusCode))\n          ) {\n            setRecipientHeader('Отримано');\n          } else {\n            setRecipientHeader('Адреса доставки');\n          }\n        }, [props.data.StatusCode]);\n\n  const InformBlock = props => {\n    return (\n      <div\n        style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}\n      >\n        <Typography variant=\"body1\" color=\"grey\" sx={{ ml: 1 }}>\n          <span style={{ color: '#1976d2', fontWeight: 'bold' }}>\n            {props.header}:{' '}\n          </span>\n          {props.value}\n        </Typography>\n      </div>\n    );\n  };\n  return (\n    <Box\n      sx={{\n        m: 1,\n        p: 1,\n        maxWidth: 435,\n        height: 300,\n        marginBottom: '8px',\n        backgroundColor: 'azure',\n        border: '1px dashed lightgrey',\n        borderRadius: 2,\n        '&:hover': {\n          backgroundColor: 'lightcyan',\n          opacity: [0.9, 0.8, 0.7],\n        },\n      }}\n    >\n      {props.data.Status && (\n        <>\n          <InformBlock header={'Статус'} value={props.data.Status} />\n                  {!negativeStatus&&(<><InformBlock\n            header={'Відправлено'}\n            value={props.data.WarehouseSender}\n          />\n          <InformBlock\n            header={recipientHeader}\n            value={props.data.WarehouseRecipient}\n          /></>)}\n        </>\n      )}\n    </Box>\n  );\n};\n","export const TtnList = () => {\n    return(\n        <ul>\n        <li>there will be a list of TTN</li>\n        </ul >\n    )\n}","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport { TtnList } from 'components/TtnList';\n\nexport default function HistoryBlock() {\n  return (\n    <Box\n      sx={{\n        m: 1,\n        border: '1px dashed grey',\n        borderRadius: 2,\n        maxWidth: 435,\n      }}\n    >\n      <Typography variant=\"h6\" color=\"primary\"\n      sx={{ml:1}}>\n        Історія\n      </Typography>\n      <TtnList/>\n      <Button>Очистити</Button>\n    </Box>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { getTrackingStatus } from 'servises/operations';\nimport { useSearchParams } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport { TtnStatus } from 'components/TTNStatus';\nimport HistoryBlock from 'components/History/History';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nexport default function CheckTTN() {\n  const [declarationStatus, setDeclarationStatus] = useState({});\n  const [searchParams] = useSearchParams();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const TtnQuery = searchParams.get('query') ?? '';\n//   const [declarationList, setDeclarationList]=useState([])\n\n  useEffect(() => {\n    const fetchTrackingData = async TtnQuery => {\n        try {\n        setIsLoading(true);\n        const response = await getTrackingStatus(TtnQuery);\n        console.log(response.data.data[0]);\n        setDeclarationStatus(response.data.data[0]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    TtnQuery && fetchTrackingData(TtnQuery);\n  }, [TtnQuery]);\n  return (\n    <>\n      <Box>\n        <SearchBar\n          label=\"Введіть номер ТТН\"\n          buttonText=\"Отримати статус\"\n          pattern=\"numeric\"\n        />\n      </Box>\n      {error && <p>Something went wrong...</p>}\n      {isLoading && <p>Loading...</p>}\n      <TtnStatus data={declarationStatus} />\n      <HistoryBlock />\n    </>\n  );\n}\n","import CheckTTN from 'components/CheckTTN/CheckTTN';\n// import { useEffect } from 'react';\n// import { getWarehouses } from 'servises/operations';\n\nconst Home = () => {\n  // useEffect(() => {\n  //   const fetchTrackingData = async (number) => {\n  //     try {\n  //       const response = await getTrackingStatus(number);\n  //       console.log(response.data.data[0]);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   }\n  //   fetchTrackingData(`20400344966669`);\n  // }, [])\n\n  // useEffect(() => {\n  //   const fetchWarehousesData = async city => {\n  //     try {\n  //       const response = await getWarehouses(city);\n  //       console.log(response.data.data);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   fetchWarehousesData(`Київ`);\n  // }, []);\n\n  return (\n    <>\n      <CheckTTN />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://api.novaposhta.ua/v2.0/json/';\nconst apiKey = 'bc0aa8469883b07a40cd36b8052a0ae2';\n\nexport function getTrackingStatus(number) {\n   const data = axios.post('/', {\n    apiKey,\n    modelName: 'TrackingDocument',\n    calledMethod: 'getStatusDocuments',\n    methodProperties: {\n      Documents: [\n        {\n          DocumentNumber: number,\n        },\n      ],\n    },\n   });\n    return data\n}\n\nexport function getWarehouses(city, page) {\n   const data = axios.post('/', {\n     apiKey,\n     modelName: 'Address',\n     calledMethod: 'getWarehouses',\n     methodProperties: {\n       CityName: city,\n       Page: page,\n       Limit: '50',\n       Language: 'UA',\n     },\n   }); \n    return data;\n}\n"],"names":["SearchBar","props","useState","value","setValue","useSearchParams","searchParams","setSearchParams","query","get","numericExpression","ukrainianLettersExpression","isValid","setIsValid","console","log","component","sx","m","width","noValidate","onSubmit","e","preventDefault","queryValue","trim","pattern","test","id","label","variant","size","inputMode","required","onChange","target","inputValue","type","buttonText","style","color","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","TtnStatus","negativeStatus","setNegativeStatus","recipientHeader","setRecipientHeader","useEffect","includes","parseInt","data","StatusCode","InformBlock","display","alignItems","ml","fontWeight","header","Box","p","maxWidth","height","backgroundColor","border","borderRadius","opacity","Status","WarehouseSender","WarehouseRecipient","TtnList","HistoryBlock","Button","CheckTTN","declarationStatus","setDeclarationStatus","setError","isLoading","setIsLoading","TtnQuery","fetchTrackingData","getTrackingStatus","response","message","axios","apiKey","number","modelName","calledMethod","methodProperties","Documents","DocumentNumber","getWarehouses","city","page","CityName","Page","Limit","Language"],"sourceRoot":""}